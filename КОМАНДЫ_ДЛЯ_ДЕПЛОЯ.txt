═══════════════════════════════════════════════════════════════
   КОМАНДЫ ДЛЯ РАЗВЕРТЫВАНИЯ НА СЕРВЕРЕ 85.92.110.173
═══════════════════════════════════════════════════════════════

ВАРИАНТ 1: Копирование и запуск одной командой
───────────────────────────────────────────────────────────────

Выполните на вашем локальном компьютере:

scp -r /tmp/mydoc-loyalty root@85.92.110.173:/var/www/ && \
ssh root@85.92.110.173 "cd /var/www/mydoc-loyalty && chmod +x install-on-server.sh && ./install-on-server.sh"


ВАРИАНТ 2: Пошаговое выполнение
───────────────────────────────────────────────────────────────

Шаг 1 - Копирование проекта (на вашем компьютере):
───────────────────────────────────────────────────
scp -r /tmp/mydoc-loyalty root@85.92.110.173:/var/www/

Шаг 2 - Подключение к серверу:
────────────────────────────────
ssh root@85.92.110.173

Шаг 3 - Запуск установки (на сервере):
────────────────────────────────────────
cd /var/www/mydoc-loyalty
chmod +x install-on-server.sh
./install-on-server.sh


ВАРИАНТ 3: Ручная установка (если скрипт не работает)
───────────────────────────────────────────────────────────────

1. Копируем проект:
   scp -r /tmp/mydoc-loyalty root@85.92.110.173:/var/www/

2. Подключаемся к серверу:
   ssh root@85.92.110.173

3. На сервере выполняем по очереди:

   # Переход в директорию
   cd /var/www/mydoc-loyalty

   # Установка Docker (если нужно)
   curl -fsSL https://get.docker.com | sh
   apt-get install -y docker-compose certbot

   # Создание директорий
   mkdir -p nginx/ssl uploads backend/qrcodes

   # Получение SSL (или self-signed)
   certbot certonly --standalone -d it-mydoc.ru || \
   openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
     -keyout nginx/ssl/privkey.pem \
     -out nginx/ssl/fullchain.pem \
     -subj "/C=RU/ST=Moscow/L=Moscow/O=MyDoc/CN=it-mydoc.ru"

   # Копирование SSL (если Let's Encrypt успешен)
   cp /etc/letsencrypt/live/it-mydoc.ru/*.pem nginx/ssl/ 2>/dev/null || true

   # Создание .env
   cat > .env << 'EOF'
DB_PASSWORD=MyDoc2025SecurePassword!
JWT_SECRET=$(openssl rand -hex 32)
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
DOMAIN=it-mydoc.ru
BITRIX_API_URL=
BITRIX_WEBHOOK=
ONEC_API_URL=
ONEC_USERNAME=
ONEC_PASSWORD=
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMS_API_KEY=
DEBUG=False
ENVIRONMENT=production
EOF

   chmod 600 .env

   # Запуск Docker
   docker-compose down
   docker-compose build
   docker-compose up -d

   # Ожидание 30 секунд
   sleep 30

   # Проверка статуса
   docker-compose ps

   # Инициализация БД
   docker-compose exec backend python scripts/seed_data.py


ПРОВЕРКА РАБОТЫ
───────────────────────────────────────────────────────────────

После установки проверьте:

# Статус контейнеров (все должны быть Up)
docker-compose ps

# Логи backend
docker-compose logs -f backend

# API health check
curl https://it-mydoc.ru/api/health

# Или в браузере:
https://it-mydoc.ru


ДОСТУП К СЕРВИСАМ
───────────────────────────────────────────────────────────────

Frontend:       https://it-mydoc.ru
Admin Panel:    https://it-mydoc.ru/admin
API Docs:       https://it-mydoc.ru/api/docs
Health Check:   https://it-mydoc.ru/api/health


ТЕСТОВЫЕ ДАННЫЕ ДЛЯ ВХОДА
───────────────────────────────────────────────────────────────

Администратор:
  Email:    admin@it-mydoc.ru
  Пароль:   admin123

Кассир:
  Email:    cashier@it-mydoc.ru
  Пароль:   cashier123

Доктор:
  Email:    doctor@it-mydoc.ru
  Пароль:   doctor123

Пациент:
  Email:    patient@it-mydoc.ru
  Пароль:   patient123

⚠️  ВАЖНО: Смените пароли после первого входа!


ПОЛЕЗНЫЕ КОМАНДЫ НА СЕРВЕРЕ
───────────────────────────────────────────────────────────────

# Просмотр логов всех сервисов
docker-compose logs -f

# Просмотр логов только backend
docker-compose logs -f backend

# Статус контейнеров
docker-compose ps

# Перезапуск всех сервисов
docker-compose restart

# Перезапуск только backend
docker-compose restart backend

# Остановка всех сервисов
docker-compose down

# Запуск
docker-compose up -d

# Полная пересборка
docker-compose down
docker-compose build --no-cache
docker-compose up -d

# Backup базы данных
docker-compose exec postgres pg_dump -U mydoc_user mydoc_loyalty > backup.sql

# Просмотр логов Nginx
docker-compose logs nginx


УСТРАНЕНИЕ ПРОБЛЕМ
───────────────────────────────────────────────────────────────

1. Контейнер не запускается:
   docker-compose logs <имя_контейнера>
   docker-compose down
   docker-compose up -d --build

2. Ошибка SSL:
   certbot renew --force-renewal
   cp /etc/letsencrypt/live/it-mydoc.ru/*.pem nginx/ssl/
   docker-compose restart nginx

3. БД не доступна:
   docker-compose restart postgres
   docker-compose exec postgres pg_isready

4. API не отвечает:
   docker-compose restart backend
   docker-compose logs backend

5. Frontend не загружается:
   docker-compose restart frontend nginx
   docker-compose logs frontend


═══════════════════════════════════════════════════════════════
                      ГОТОВО! 🚀
═══════════════════════════════════════════════════════════════
